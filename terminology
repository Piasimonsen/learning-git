Git             SVC (source version control) - Distributed Revision Control (intead of working copies, everybody has a their own full repository -> faster dev) -used from command line.
Github          Conpany + reposotory hosting service with a grapichal interface

Repository      A Project (local or fx on Github)
Fork            Github copy of a repository (starting point for own project or propose a change)
Clone           A local copy of a Github repository (add the URL after clone)

Branches        Versions based on one base!
Push            To remote reprository
Pull            Request to you integrate changes into other branches (A pull request)

Integrates change into anouther branch
Merge           Means bringing the changes into you branch
Rebase          Means moving you changes on top of latest changes (creates a cleaner project history)

Forked history  Changes are made on two different branches
Merge commit    
Upstream changes

Working Directory - Local repository - Staging (let you group a set of changes) - Github Repository
Cherry Pick, Issues, Gist

Git Commands >>>
  Init (creating a git repository - or changes a unversioned project into a git repository)

Git Workflow
  Add (Working Directory -> Staging)
  Commit -m "message" (Staging to Local Repository)
  Push (Staging -> Github Repository)

Pull (Pull changes from Github Repository -> Local repository)


Git log
Git status
Git Blame
Git Diff

Setting Up Git: Download Git, Create User, Setup User, Start :)

(Basic Linux Commands: ls, cd, cd .., echo 'Hello, world.' >hello.txt)
